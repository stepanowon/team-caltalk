name: Deploy Backend to Vercel

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run tests
        working-directory: ./backend
        run: |
          npm run lint || true
          # npm run test:ci || true  # 테스트가 준비되면 활성화
        env:
          NODE_ENV: test

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information (Preview)
        if: github.event_name == 'pull_request'
        working-directory: ./backend
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Pull Vercel Environment Information (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: ./backend
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts (Preview)
        if: github.event_name == 'pull_request'
        working-directory: ./backend
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: ./backend
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel (Preview)
        if: github.event_name == 'pull_request'
        id: deploy-preview
        working-directory: ./backend
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "### 🚀 Preview Deployment" >> $GITHUB_STEP_SUMMARY
          echo "Preview URL: $url" >> $GITHUB_STEP_SUMMARY

      - name: Deploy to Vercel (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: deploy-prod
        working-directory: ./backend
        run: |
          url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "### 🎉 Production Deployment" >> $GITHUB_STEP_SUMMARY
          echo "Production URL: $url" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🚀 Backend Preview Deployment

              Preview URL: ${{ steps.deploy-preview.outputs.url }}

              - Health Check: ${{ steps.deploy-preview.outputs.url }}/health
              - API Info: ${{ steps.deploy-preview.outputs.url }}/api
              - Swagger Docs: ${{ steps.deploy-preview.outputs.url }}/api/docs

              배포가 완료되었습니다! 🎉`
            })
